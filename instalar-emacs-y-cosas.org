* Mis cosas
  #+begin_src bash
sudo apt install zsh texlive-full inkscape htop tmux git iftop iotop tcpdump curl silversearcher-ag graphviz virtualbox pandoc
git clone https://github.com/alvarogonzalezsotillo/.emacs.d.git
wget https://github.com/xournalpp/xournalpp/releases/download/1.1.0/xournalpp-1.1.0-Ubuntu-focal-x86_64.deb
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
PROMPT="%{$fg[blue]%}%T %{$fg[cyan]%}%n%{$fg[blue]%}@%{$fg[cyan]%}%m ${PROMPT}"

#+end_src

#+begin_src bash

git config --global user.email "alvaro@thinkpad"
git config --global user.name "alvaro@thinkpad"

  #+end_src  

  #+RESULTS:



* emacs

  #+begin_src bash
git clone git://git.sv.gnu.org/emacs.git
sudo apt-get install libtiff-dev build-essential libgtk-3-dev libtiff5-dev libgif-dev libjpeg-dev libpng-dev libxpm-dev libncurses-dev autoconf texinfo libgnutls28-dev libxml2-dev libjansson-dev libgccjit-dev
./autogen.sh 
./configure --with-native-compilation
  #+end_src

* zsh
  #+begin_src bash
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
PROMPT="%{$fg[blue]%}%T %{$fg[cyan]%}%n%{$fg[blue]%}@%{$fg[cyan]%}%m ${PROMPT}"
  #+end_src


* owncloud educamadrid
  #+begin_src bash
wget -nv https://download.owncloud.com/desktop/ownCloud/stable/latest/linux/Ubuntu_20.04/Release.key -O - | sudo apt-key add -
echo 'deb https://download.owncloud.com/desktop/ownCloud/stable/latest/linux/Ubuntu_20.04/ /' | sudo tee -a /etc/apt/sources.list.d/owncloud.list
sudo apt install owncloud-client owncloud-client-dolphin

  #+end_src
  
* onedrive
Fichero =~/.config/onedrive/config/=

#+begin_src conf
# Configuration for OneDrive Linux Client
# This file contains the list of supported configuration fields
# with their default values.
# All values need to be enclosed in quotes
# When changing a config option below, remove the '#' from the start of the line
# For explanations of all config options below see docs/USAGE.md or the man page.
#
sync_dir = "~/cloud/OneDrive"
# skip_file = "~*|.~*|*.tmp"
# monitor_interval = "300"
# skip_dir = ""
# log_dir = "/var/log/onedrive/"
# drive_id = ""
# upload_only = "false"
# check_nomount = "false"
# check_nosync = "false"
# download_only = "false"
# disable_notifications = "false"
# disable_upload_validation = "false"
# enable_logging = "false"
# force_http_2 = "false"
# local_first = "false"
# no_remote_delete = "false"
# skip_symlinks = "false"
# debug_https = "false"
# skip_dotfiles = "false"
# dry_run = "false"
# min_notify_changes = "5"
# monitor_log_frequency = "5"
# monitor_fullscan_frequency = "10"
# sync_root_files = "false"
# classify_as_big_delete = "1000"
# user_agent = ""
# remove_source_files = "false"
# skip_dir_strict_match = "false"
# application_id = ""
# resync = "false"
# bypass_data_preservation = "false"
# azure_ad_endpoint = ""
# azure_tenant_id = "common"
# sync_business_shared_folders = "false"
# sync_dir_permissions = "700"
# sync_file_permissions = "600"
# rate_limit = "131072"
#+end_src


* Hibernar
  uswsusp


* SQLDeveloper y packettracer
  Descomprimir y gdebi, con openjdk-11-jdk

* Office 2010
Tengo un /prefix/ de Wine con Office 2010 instalado, que llevo arrastrando ya varios a√±os, y que suele funcionar sin m√°s que descomprimirlo
Es necesario instalar previamente winbind

  
  #+begin_src bash
curl https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
sudo apt install winbind
sudo apt install --install-recommends winehq-stable
  #+end_src

  #+RESULTS:

* PIM
  kmail y korganizer

  Cuenta de correo de educamadrid y de Google
  


* Video
obs-studio y kdenlive


* chats

  https://desktop.telegram.org/
  https://www.microsoft.com/en-us/microsoft-teams/download-app#desktopAppDownloadregion

* Lenguajes de programaci√≥n
  
https://rustup.rs/ --> curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

sudo sh -c '(echo "#!/usr/bin/env sh" && curl -L https://github.com/com-lihaoyi/Ammonite/releases/download/2.4.0/2.12-2.4.0) > /usr/local/bin/amm && chmod +x /usr/local/bin/amm' && amm

Por alguna raz√≥n, me funciona ammonite pero scala con =sudo apt install --install-recommends scala= no ü§∑‚Äç‚ôÇÔ∏è
